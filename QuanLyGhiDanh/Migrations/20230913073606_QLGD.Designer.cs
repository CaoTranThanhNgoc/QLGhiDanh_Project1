// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyGhiDanh.AppDBContext;

#nullable disable

namespace QuanLyGhiDanh.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230913073606_QLGD")]
    partial class QLGD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.BangDiemEntity", b =>
                {
                    b.Property<string>("maDiem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("diemTB")
                        .HasColumnType("float");

                    b.HasKey("maDiem");

                    b.ToTable("BangDiem");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.ChucVuEntity", b =>
                {
                    b.Property<string>("maChucVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maChucVu");

                    b.HasIndex("maNguoiDung");

                    b.ToTable("ChucVu");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.DoanhThuEntity", b =>
                {
                    b.Property<string>("maDoanhThuTheoKy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ngayThuHocPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maDoanhThuTheoKy");

                    b.ToTable("DoanhThu");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.GiangVienEntity", b =>
                {
                    b.Property<string>("maGiangVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maGiangVien");

                    b.HasIndex("maNhanVien");

                    b.ToTable("GiangVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.GiangVien_MonHocEntity", b =>
                {
                    b.Property<string>("maGiangVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("maGiangVien", "maMonHoc");

                    b.HasIndex("maMonHoc");

                    b.ToTable("GiangVien_MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.HocPhiEntity", b =>
                {
                    b.Property<string>("maPhieuHocPhi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ghiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("giamGia")
                        .HasColumnType("float");

                    b.Property<string>("maDoanhThuTheoKy")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("mucThuHocPhi")
                        .HasColumnType("float");

                    b.HasKey("maPhieuHocPhi");

                    b.HasIndex("maDoanhThuTheoKy");

                    b.ToTable("HocPhi");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.HocVienEntity", b =>
                {
                    b.Property<string>("maHocVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("anhHocVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ngaysinh")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("sdt")
                        .HasColumnType("int");

                    b.Property<string>("tenDemVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenPhuHuynh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maHocVien");

                    b.ToTable("HocVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.HocVien_LopHocEntity", b =>
                {
                    b.Property<string>("maLopHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maHocVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maPhieuHocPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("maLopHoc", "maHocVien");

                    b.HasIndex("maDiem");

                    b.HasIndex("maHocVien");

                    b.HasIndex("maPhieuHocPhi");

                    b.ToTable("HocVien_LopHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.KhoaDaoTaoEntity", b =>
                {
                    b.Property<string>("maKhoaDaoTao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("ngayBatDau")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ngayKetThuc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenKhoaDaoTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maKhoaDaoTao");

                    b.HasIndex("maNhanVien");

                    b.ToTable("KhoaDaoTao");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.KhoaKhoiEntity", b =>
                {
                    b.Property<string>("maKhoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maKhoa");

                    b.ToTable("KhoaKhoi");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LichGiangDayEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maGiangVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("maGiangVien");

                    b.ToTable("LichGiangDay");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LichHocEntity", b =>
                {
                    b.Property<string>("maLichHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maLopHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tenLichHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maLichHoc");

                    b.HasIndex("maLopHoc");

                    b.ToTable("LichHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LichNghiEntity", b =>
                {
                    b.Property<string>("maLich")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("lyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ngayBatDau")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ngayKetThuc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenLich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maLich");

                    b.ToTable("LichNghi");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LienHeEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maHocVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tinNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("maHocVien");

                    b.ToTable("LienHe");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LoaiDiemEntity", b =>
                {
                    b.Property<string>("maLoaiDiem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("heSo")
                        .HasColumnType("int");

                    b.Property<string>("tenLoaiDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maLoaiDiem");

                    b.ToTable("LoaiDiem");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LoaiDiem_MonHocEntity", b =>
                {
                    b.Property<string>("maLoaiDiem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("soCotDiem")
                        .HasColumnType("int");

                    b.Property<int>("soCotDiemBatBuoc")
                        .HasColumnType("int");

                    b.HasKey("maLoaiDiem", "maMonHoc");

                    b.HasIndex("maMonHoc");

                    b.ToTable("LoaiDiem_MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LoaiHocPhiEntity", b =>
                {
                    b.Property<string>("maLoaiHocPhi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maPhieuHocPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tenLoaiHocPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maLoaiHocPhi");

                    b.HasIndex("maPhieuHocPhi");

                    b.ToTable("LoaiHocPhi");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LopHocEntity", b =>
                {
                    b.Property<string>("maLopHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("hinhLopHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hocPhi")
                        .HasColumnType("int");

                    b.Property<string>("maLich")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soLuongHocVien")
                        .HasColumnType("int");

                    b.Property<string>("ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maLopHoc");

                    b.HasIndex("maLich");

                    b.ToTable("LopHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.MonHocEntity", b =>
                {
                    b.Property<string>("maMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maBoMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maMonHoc");

                    b.HasIndex("maBoMon");

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.MonHoc_KhoaDaoTaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maKhoaDaoTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("maKhoaDaoTao");

                    b.HasIndex("maMonHoc");

                    b.ToTable("MonHoc_KhoaDaoTao");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.MonHoc_LopHocEntity", b =>
                {
                    b.Property<string>("maLopHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("maLopHoc", "maMonHoc");

                    b.HasIndex("maMonHoc");

                    b.ToTable("MonHoc_LopHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.NguoiDungEntity", b =>
                {
                    b.Property<string>("maNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maNguoiDung");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.NhanVienEntity", b =>
                {
                    b.Property<string>("maNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("anhNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maSoThue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ngayHopTac")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ngaysinh")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("sdt")
                        .HasColumnType("int");

                    b.Property<string>("tenDemVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maNhanVien");

                    b.HasIndex("maChucVu");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhanCongGiangDayEntity", b =>
                {
                    b.Property<string>("maPhanCongGiangDay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maLopHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maGiangVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("gioBatDauHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gioKetThucHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ngayBatDau")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ngayHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ngayKetThuc")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("maPhanCongGiangDay", "maMonHoc", "maLopHoc", "maGiangVien");

                    b.HasIndex("maGiangVien");

                    b.HasIndex("maLopHoc");

                    b.HasIndex("maMonHoc");

                    b.ToTable("PhanCongGiangDay");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhongHocEntity", b =>
                {
                    b.Property<string>("maPhong")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trangThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maPhong");

                    b.ToTable("PhongHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhongHoc_LopHocEntity", b =>
                {
                    b.Property<string>("maLopHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maPhong")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("maLopHoc", "maPhong");

                    b.HasIndex("maPhong");

                    b.ToTable("PhongHoc_LopHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhuCapEntity", b =>
                {
                    b.Property<string>("maPhuCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TinhLuongsmaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("phiPhuCap")
                        .HasColumnType("float");

                    b.Property<string>("tenPhuCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maPhuCap");

                    b.HasIndex("TinhLuongsmaNhanVien");

                    b.ToTable("PhuCap");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.TinhLuongEntity", b =>
                {
                    b.Property<string>("maNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("phanTramLuongGiangVien")
                        .HasColumnType("float");

                    b.Property<double>("thucLanh")
                        .HasColumnType("float");

                    b.Property<double>("tongLuong")
                        .HasColumnType("float");

                    b.HasKey("maNhanVien");

                    b.ToTable("TinhLuong");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.ToBoMonEntity", b =>
                {
                    b.Property<string>("maBoMon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("maKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tenBoMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maBoMon");

                    b.HasIndex("maKhoa");

                    b.ToTable("ToBoMon");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.ChucVuEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.NguoiDungEntity", "NguoiDung")
                        .WithMany("ChucVus")
                        .HasForeignKey("maNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.GiangVienEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.NhanVienEntity", "NhanVien")
                        .WithMany("GiangViens")
                        .HasForeignKey("maNhanVien");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.GiangVien_MonHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.GiangVienEntity", "GiangVien")
                        .WithMany("GiangVien_MonHocs")
                        .HasForeignKey("maGiangVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.MonHocEntity", "MonHoc")
                        .WithMany("GiangVien_MonHocs")
                        .HasForeignKey("maMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.HocPhiEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.DoanhThuEntity", "DoanhThu")
                        .WithMany("HocPhis")
                        .HasForeignKey("maDoanhThuTheoKy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoanhThu");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.HocVien_LopHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.BangDiemEntity", "BangDiem")
                        .WithMany("HocVien_LopHocs")
                        .HasForeignKey("maDiem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.HocVienEntity", "HocVien")
                        .WithMany("HocVien_LopHocs")
                        .HasForeignKey("maHocVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.LopHocEntity", "LopHoc")
                        .WithMany("HocVien_LopHocs")
                        .HasForeignKey("maLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.HocPhiEntity", "HocPhi")
                        .WithMany("HocVien_LopHocs")
                        .HasForeignKey("maPhieuHocPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BangDiem");

                    b.Navigation("HocPhi");

                    b.Navigation("HocVien");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.KhoaDaoTaoEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.NhanVienEntity", "NhanVien")
                        .WithMany("KhoaDaoTaos")
                        .HasForeignKey("maNhanVien");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LichGiangDayEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.GiangVienEntity", "GiangVien")
                        .WithMany()
                        .HasForeignKey("maGiangVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LichHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.LopHocEntity", "LopHoc")
                        .WithMany("LichHocs")
                        .HasForeignKey("maLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LienHeEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.HocVienEntity", "HocVien")
                        .WithMany("LienHes")
                        .HasForeignKey("maHocVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LoaiDiem_MonHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.LoaiDiemEntity", "LoaiDiem")
                        .WithMany("LoaiDiem_MonHocs")
                        .HasForeignKey("maLoaiDiem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.MonHocEntity", "MonHoc")
                        .WithMany("LoaiDiem_MonHocs")
                        .HasForeignKey("maMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiDiem");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LoaiHocPhiEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.HocPhiEntity", "HocPhi")
                        .WithMany("LoaiHocPhis")
                        .HasForeignKey("maPhieuHocPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocPhi");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LopHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.LichNghiEntity", "LichNghi")
                        .WithMany("LopHocs")
                        .HasForeignKey("maLich")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LichNghi");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.MonHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.ToBoMonEntity", "ToBoMon")
                        .WithMany("MonHocs")
                        .HasForeignKey("maBoMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToBoMon");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.MonHoc_KhoaDaoTaoEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.KhoaDaoTaoEntity", "KhoaDaoTao")
                        .WithMany("MonHoc_KhoaDaoTaos")
                        .HasForeignKey("maKhoaDaoTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.MonHocEntity", "MonHoc")
                        .WithMany("MonHoc_KhoaDaoTaos")
                        .HasForeignKey("maMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaDaoTao");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.MonHoc_LopHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.LopHocEntity", "LopHoc")
                        .WithMany("MonHoc_LopHocs")
                        .HasForeignKey("maLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.MonHocEntity", "MonHoc")
                        .WithMany("MonHoc_LopHocs")
                        .HasForeignKey("maMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LopHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.NhanVienEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.ChucVuEntity", "ChucVu")
                        .WithMany("NhanViens")
                        .HasForeignKey("maChucVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhanCongGiangDayEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.GiangVienEntity", "GiangVien")
                        .WithMany()
                        .HasForeignKey("maGiangVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.LopHocEntity", "LopHoc")
                        .WithMany()
                        .HasForeignKey("maLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.MonHocEntity", "MonHoc")
                        .WithMany("PhanCongGiangDays")
                        .HasForeignKey("maMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("LopHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhongHoc_LopHocEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.LopHocEntity", "LopHoc")
                        .WithMany("PhongHoc_LopHocs")
                        .HasForeignKey("maLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyGhiDanh.Entitys.PhongHocEntity", "PhongHoc")
                        .WithMany("PhongHoc_LopHocs")
                        .HasForeignKey("maPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LopHoc");

                    b.Navigation("PhongHoc");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhuCapEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.TinhLuongEntity", "TinhLuongs")
                        .WithMany("PhuCaps")
                        .HasForeignKey("TinhLuongsmaNhanVien");

                    b.Navigation("TinhLuongs");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.TinhLuongEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.NhanVienEntity", "NhanVien")
                        .WithMany()
                        .HasForeignKey("maNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.ToBoMonEntity", b =>
                {
                    b.HasOne("QuanLyGhiDanh.Entitys.KhoaKhoiEntity", "KhoaKhoi")
                        .WithMany("ToBoMons")
                        .HasForeignKey("maKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaKhoi");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.BangDiemEntity", b =>
                {
                    b.Navigation("HocVien_LopHocs");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.ChucVuEntity", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.DoanhThuEntity", b =>
                {
                    b.Navigation("HocPhis");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.GiangVienEntity", b =>
                {
                    b.Navigation("GiangVien_MonHocs");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.HocPhiEntity", b =>
                {
                    b.Navigation("HocVien_LopHocs");

                    b.Navigation("LoaiHocPhis");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.HocVienEntity", b =>
                {
                    b.Navigation("HocVien_LopHocs");

                    b.Navigation("LienHes");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.KhoaDaoTaoEntity", b =>
                {
                    b.Navigation("MonHoc_KhoaDaoTaos");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.KhoaKhoiEntity", b =>
                {
                    b.Navigation("ToBoMons");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LichNghiEntity", b =>
                {
                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LoaiDiemEntity", b =>
                {
                    b.Navigation("LoaiDiem_MonHocs");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.LopHocEntity", b =>
                {
                    b.Navigation("HocVien_LopHocs");

                    b.Navigation("LichHocs");

                    b.Navigation("MonHoc_LopHocs");

                    b.Navigation("PhongHoc_LopHocs");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.MonHocEntity", b =>
                {
                    b.Navigation("GiangVien_MonHocs");

                    b.Navigation("LoaiDiem_MonHocs");

                    b.Navigation("MonHoc_KhoaDaoTaos");

                    b.Navigation("MonHoc_LopHocs");

                    b.Navigation("PhanCongGiangDays");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.NguoiDungEntity", b =>
                {
                    b.Navigation("ChucVus");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.NhanVienEntity", b =>
                {
                    b.Navigation("GiangViens");

                    b.Navigation("KhoaDaoTaos");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.PhongHocEntity", b =>
                {
                    b.Navigation("PhongHoc_LopHocs");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.TinhLuongEntity", b =>
                {
                    b.Navigation("PhuCaps");
                });

            modelBuilder.Entity("QuanLyGhiDanh.Entitys.ToBoMonEntity", b =>
                {
                    b.Navigation("MonHocs");
                });
#pragma warning restore 612, 618
        }
    }
}
